{"version":3,"sources":["./src/app/state.ts","./src/app/formatting.ts","./src/app/format-score.pipe.ts","./src/app/format-cost.pipe.ts","./src/app/generator.ts","./src/app/score/score.component.ts","./src/app/score/score.component.html","./src/app/options/options.component.ts","./src/app/options/options.component.html","./src/environments/environment.ts","./src/app/state.service.ts","./src/app/common.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/generators/generators.component.ts","./src/app/generators/generators.component.html","./src/app/format-production.pipe.ts","./src/app/achievements/achievements.component.ts","./src/app/achievements/achievements.component.html","./src/app/format-number.pipe.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import Decimal from 'break_infinity.js';\r\nimport { Generator } from './generator';\r\n\r\nexport class State {\r\n  public lastUpdate: number;\r\n  public energy = new Decimal(10);\r\n  public output = new Decimal(0);\r\n  public interval = new Decimal(1000);\r\n  public level = 0;\r\n  public generators = [\r\n    new Generator(\r\n      0,\r\n      'Generator',\r\n      new Decimal(1e1),\r\n      new Decimal(1e3),\r\n      0),\r\n    new Generator(\r\n      1,\r\n      'Booster',\r\n      new Decimal(1e2),\r\n      new Decimal(1e4),\r\n      1),\r\n    new Generator(\r\n      2,\r\n      'Hyper Booster',\r\n      new Decimal(1e3),\r\n      new Decimal(1e5),\r\n      1),\r\n    new Generator(\r\n      3,\r\n      'Enhanced Sensors',\r\n      new Decimal(1e5),\r\n      new Decimal(1e7),\r\n      2),\r\n    new Generator(\r\n      4,\r\n      '6DoF Stabilizers',\r\n      new Decimal(1e8),\r\n      new Decimal(1e9),\r\n      3),\r\n    new Generator(\r\n      5,\r\n      'Deep Learning',\r\n      new Decimal(1e13),\r\n      new Decimal(1e12),\r\n      5),\r\n    new Generator(\r\n      6,\r\n      'Nano Servos',\r\n      new Decimal(1e19),\r\n      new Decimal(1e14),\r\n      8),\r\n    new Generator(\r\n      7,\r\n      'Gravity Shift',\r\n      new Decimal(1e25),\r\n      new Decimal(1e18),\r\n      13),\r\n  ];\r\n}","import Decimal from 'break_infinity.js'\r\n\r\n// https://officespace.zendesk.com/hc/en-us/articles/115000593531-Scientific-Notation-Large-Numbers-Guide\r\n\r\nconst suffixes = [\r\n  {\r\n    size: new Decimal(1e3),\r\n    name: 'kilo',\r\n    unit: 'K'\r\n  },\r\n  {\r\n    size: new Decimal(1e6),\r\n    name: 'million',\r\n    unit: 'M'\r\n  },\r\n  {\r\n    size: new Decimal(1e9),\r\n    name: 'billion',\r\n    unit: 'B'\r\n  },\r\n  {\r\n    size: new Decimal(1e12),\r\n    name: 'trillion',\r\n    unit: 'T'\r\n  },\r\n  {\r\n    size: new Decimal(1e15),\r\n    name: 'quadrillion',\r\n    unit: 'Qa'\r\n  },\r\n  {\r\n    size: new Decimal(1e18),\r\n    name: 'quintillion',\r\n    unit: 'Qi'\r\n  },\r\n  {\r\n    size: new Decimal(1e21),\r\n    name: 'sextillion',\r\n    unit: 'Sx'\r\n  },\r\n  {\r\n    size: new Decimal(1e24),\r\n    name: 'septillion',\r\n    unit: 'Sp'\r\n  },\r\n  {\r\n    size: new Decimal(1e27),\r\n    name: 'octillion',\r\n    unit: 'Oc'\r\n  },\r\n  {\r\n    size: new Decimal(1e30),\r\n    name: 'nonillion',\r\n    unit: 'No'\r\n  },\r\n  {\r\n    size: new Decimal(1e33),\r\n    name: 'decillion',\r\n    unit: 'Dc'\r\n  },\r\n  {\r\n    size: new Decimal(1e36),\r\n    name: 'undecillion',\r\n    unit: 'Ud'\r\n  },\r\n  {\r\n    size: new Decimal(1e39),\r\n    name: 'duodecillion',\r\n    unit: 'Dd'\r\n  },\r\n  {\r\n    size: new Decimal(1e42),\r\n    name: 'tredecillion',\r\n    unit: 'Td'\r\n  },\r\n  {\r\n    size: new Decimal(1e45),\r\n    name: 'quattuordecillion',\r\n    unit: 'Qad'\r\n  },\r\n  {\r\n    size: new Decimal(1e48),\r\n    name: 'quindecillion',\r\n    unit: 'Qid'\r\n  },\r\n  {\r\n    size: new Decimal(1e51),\r\n    name: 'sexdecillion',\r\n    unit: 'Sxd'\r\n  },\r\n  {\r\n    size: new Decimal(1e54),\r\n    name: 'septendecillion',\r\n    unit: 'Spd'\r\n  },\r\n  {\r\n    size: new Decimal(1e57),\r\n    name: 'octodecillion',\r\n    unit: 'Ocd'\r\n  },\r\n  {\r\n    size: new Decimal(1e60),\r\n    name: 'novemdecillion',\r\n    unit: 'Nod'\r\n  },\r\n  {\r\n    size: new Decimal(1e63),\r\n    name: 'vigintillion',\r\n    unit: 'Vg'\r\n  },\r\n  {\r\n    size: new Decimal(1e66),\r\n    name: 'unvigintillion',\r\n    unit: 'Uvg'\r\n  },\r\n];\r\n\r\nconst lastSuffixSize = suffixes[suffixes.length - 1].size;\r\nexport function hasKnownSuffix(value: Decimal): boolean {\r\n  return value.lessThanOrEqualTo(lastSuffixSize);\r\n}\r\n\r\nexport function shorten(value: Decimal): [Decimal, string, string ] {\r\n  let suffix: { size: Decimal, name: string, unit: string };\r\n  for(let s of suffixes) {\r\n    if(value.greaterThanOrEqualTo(s.size)) {\r\n      suffix = s;\r\n    }\r\n  }\r\n\r\n  let val = value.div(suffix.size);\r\n  return [val, suffix.name, suffix.unit];\r\n}\r\n\r\nexport function formatBignumber(value: Decimal): string {\r\n  let mantissa = value.mantissa;\r\n  let exponent = value.exponent;\r\n  if (mantissa >= 10) {\r\n    exponent += 1;\r\n    mantissa /= 10;\r\n  }\r\n  return `${mantissa.toFixed(1)}e${exponent}`;\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport Decimal from 'break_infinity.js';\r\nimport { hasKnownSuffix, formatBignumber, shorten } from './formatting';\r\n\r\n@Pipe({ name: 'formatScore'})\r\nexport class FormatScorePipe implements PipeTransform {\r\n  transform(value: Decimal) {\r\n    if (value.lessThan(1e4)) {\r\n      return value.toFixed(0);\r\n    }\r\n  \r\n    if (!hasKnownSuffix(value)) {\r\n      return formatBignumber(value);\r\n    }\r\n  \r\n    let [val, name, suffix] = shorten(value);\r\n    return `${val.toFixed(1)} ${suffix} (${name})`;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport Decimal from 'break_infinity.js';\r\nimport { hasKnownSuffix, formatBignumber, shorten } from './formatting';\r\n\r\n@Pipe({ name: 'formatCost' })\r\nexport class FormatCostPipe implements PipeTransform {\r\n  transform(value: Decimal) {\r\n    if (value.lessThan(1e4)) {\r\n      return value.toString();\r\n    }\r\n  \r\n    if (!hasKnownSuffix(value)) {\r\n      return `${value.mantissa}e${value.exponent}`;\r\n    }\r\n  \r\n    let [val, _, suffix] = shorten(value);\r\n    return `${val.toFixed(0)} ${suffix}`;\r\n  }\r\n}","import Decimal from 'break_infinity.js';\r\nimport { State } from './state';\r\n\r\nexport class Generator {\r\n  public number = new Decimal(0);\r\n  public numberBought = 0;\r\n  public level = 0;\r\n  public baseProduction = new Decimal(1);\r\n\r\n  constructor(\r\n    public tier: number,\r\n    public name: string,\r\n    public baseCost: Decimal,\r\n    public costMultiplier: Decimal,\r\n    public requiredLevel: number) { }\r\n\r\n  buy(state: State): void {\r\n    state.energy = state.energy.sub(this.cost());\r\n    this.number = this.number.add(1);\r\n    this.numberBought += 1;\r\n  }\r\n\r\n  buyTo10(state: State): void {\r\n    let num = 10 - (this.numberBought % 10);\r\n    for (let i = 0; i < num; i++) {\r\n      this.buy(state);\r\n    }\r\n  }\r\n\r\n  power(): number {\r\n    return Math.floor(this.numberBought / 10);\r\n  }\r\n\r\n  purchased(): number {\r\n    return Math.floor(this.numberBought % 10);\r\n  }\r\n\r\n  cost(): Decimal {\r\n    return this.baseCost.mul(\r\n      this.costMultiplier.pow(this.power()));\r\n  }\r\n\r\n  costTo10(): Decimal {\r\n    let num = 10 - (this.numberBought % 10);\r\n    return this.cost().mul(num);\r\n  }\r\n\r\n  production(): Decimal {\r\n    let base = this.baseProduction.plus(this.level * 0.5);\r\n    return base.mul(new Decimal(2).pow(this.power()));\r\n  }\r\n\r\n  isBuyEnabled(state: State): boolean {\r\n    return state.energy.greaterThanOrEqualTo(this.cost());\r\n  }\r\n\r\n  isBuyTo10Enabled(state: State): boolean {\r\n    return state.energy.greaterThanOrEqualTo(this.costTo10());\r\n  }\r\n\r\n  isVisible(state: State): boolean {\r\n    if (this.tier < 1) {\r\n      return true;\r\n    }\r\n\r\n    return state.generators[this.tier - 1].number.greaterThan(0) &&\r\n      this.requiredLevel <= state.level;\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { State } from '../state';\nimport { StateService } from '../state.service';\nimport Decimal from 'break_infinity.js';\nimport { ToastrService } from 'ngx-toastr';\n\nconst baseTarget = new Decimal(1e4);\nconst targetMultiplier = new Decimal(1e6);\n\n@Component({\n  selector: 'app-score',\n  templateUrl: './score.component.html',\n  styleUrls: ['./score.component.css']\n})\nexport class ScoreComponent implements OnInit {\n  state: State;\n\n  constructor(\n    private stateService: StateService,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.state = this.stateService.getState();\n  }\n\n  target(): Decimal {\n    return baseTarget.mul(targetMultiplier.pow(this.state.level));\n  }\n\n  progress(): number {\n    if (this.state.output.lessThan(1)) {\n      return 0;\n    }\n\n    let e = this.state.energy.plus(1).log10();\n    let t = this.target().plus(1).log10();\n    return Math.min(e / t * 100, 100);\n  }\n\n  evolve(): void {\n    this.stateService.evolve();\n    for(let g of this.state.generators) {\n      if(g.requiredLevel === this.state.level) {\n        this.toastr.info(`${g.name} unlocked!`, 'New generator', {\n          disableTimeOut: true,\n          closeButton: false\n        });\n      }\n    }\n  }\n}\n","<style>\n  .progress-bar {\n    color: white;\n  }\n</style>\n<div>\n  <h1 class=\"text-center\">\n    <code>{{state.energy | formatScore}}</code>\n  </h1>\n  <h5 class=\"text-center\">Generating <code>{{state.output | formatNumber}}</code> joule per second.</h5>\n</div>\n<div class=\"progress mb-2 mt-2\" style=\"height: 20px\">\n  <div class=\"progress-bar progress-bar-striped progress-bar-animated\" \n    role=\"progressbar\" \n    [style.width]=\"progress().toFixed(0) + '%'\" \n    [attr.aria-valuenow]=\"progress()\" \n    aria-valuemin=\"0\" \n    aria-valuemax=\"100\">\n    {{progress().toFixed(1)}}%\n  </div>\n</div>\n<div class=\"mb-2\" *ngIf=\"progress() >= 100\">\n  <button\n  type=\"button\"\n  class=\"btn btn-success btn-block\"\n  (click)=\"evolve()\">\n  Evolve\n  </button>\n</div>\n<div *ngIf=\"progress() < 100\" class=\"mb-2\">\n  Next evolutionary algorithm at <code>{{target() | formatCost}}</code> joule.\n</div>","import { Component, OnInit } from '@angular/core';\nimport { State } from '../state';\nimport { StateService } from '../state.service';\nimport { SAVE_FILE } from '../common';\n\n@Component({\n  selector: 'app-options',\n  templateUrl: './options.component.html',\n  styleUrls: ['./options.component.css']\n})\nexport class OptionsComponent implements OnInit {\n  state: State;\n\n  constructor(private stateService: StateService) { }\n\n  ngOnInit(): void {\n    this.state = this.stateService.getState();\n  }\n  \n  reset(): void {\n    this.stateService.reset();\n    localStorage.removeItem(SAVE_FILE);\n  }  \n}\n","<div>\r\n  <p>Nothing is eternal. Eternal is darkness. Darkness is bliss.</p>\r\n  <p>Reset will <strong>totally wipe</strong> all your progress.</p>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-3\">\r\n    <button type=\"button\" class=\"btn btn-primary btn-block btn-danger\" (click)=\"reset()\">\r\n      Reset\r\n    </button>          \r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport Decimal from 'break_infinity.js';\nimport { State } from './state';\n\nconst def = new State();\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  private state = new State();\n\n  constructor() { }\n\n  getState(): State {\n    return this.state;\n  }\n\n  evolve(): void {\n    this.state.energy = def.energy;\n    this.state.interval = def.interval;\n    this.state.output = def.output;\n    for(let g of this.state.generators) {\n      if(g.requiredLevel > this.state.level) {\n        continue;\n      }\n      g.number = new Decimal(0);\n      g.numberBought = 0;\n      g.baseProduction = new Decimal(1);\n      g.level += 1;\n    }\n    this.state.level += 1;\n  }\n\n  reset(): void {\n    this.state.energy = def.energy;\n    this.state.interval = def.interval;\n    this.state.level = def.level;\n    this.state.output = def.output;\n    for(let g of this.state.generators) {\n      g.number = new Decimal(0);\n      g.numberBought = 0;\n      g.level = 0;\n      g.baseProduction = new Decimal(1);\n    }\n  }\n}\n","export const SAVE_FILE = 'sandbox.save';","import { Component } from '@angular/core';\nimport { Generator } from './generator';\nimport { State } from './state';\nimport { StateService } from './state.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { SAVE_FILE } from './common';\nimport Decimal from 'break_infinity.js';\n\n// In order to increase game speed without increasing\n// the actual framerate we'll use `refspeed` and `tickspeed`.\n// At the start of the game `refspeed` and `tickspeed` should\n// be equal. This will yield a production multiplier of 1.\n// During the game, `tickspeed` might become lower and thus the \n// ratio of `refspeed` divided by `tickspeed` will be greater\n// than one. If production is then multiplied with this value\n// we will get a \"virtual\" time boost.\nconst refspeed = 1000;\nconst tickspeed = 1000;\n\n// This is the actual \"framerate\" (i.e the game will update `rate` \n// times per second).\nconst rate = 10;\n\n// This is the expect duration of each \"frame\" in milliseconds if\n// the game would run on an infinitely fast CPU with 100% accurate\n// browser scheduling.\nconst interval = 1000 / rate;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Legendary Fiesta';\n  state: State;\n\n  constructor(\n    private stateService: StateService,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    // State is now shared between multiple components\n    // so we'll obtain it via a state service.\n    this.state = this.stateService.getState();\n\n    // We probably don't want to do this once\n    // we enable offline progression.\n    this.state.lastUpdate = performance.now();\n    \n    // Try to load any save game we might have.\n    // This will do nothing if there's no stored\n    // save file available (i.e. a completely new user).\n    this.load();\n\n    // Initialize the main gameloop timer.\n    setInterval(() => {\n      const thisUpdate = performance.now();\n\n      // The value of `dt` is the amount of time that\n      // has passed since we last updated the game.\n      const dt = thisUpdate - this.state.lastUpdate;\n      this.update(dt);\n\n      // Make sure we remember the last time that\n      // we updated for the next frame update.\n      this.state.lastUpdate = thisUpdate;\n    }, interval);\n\n    // We'll save every 30 seconds which seems reasonable.\n    const saveInterval = 30 * 1000;\n    setInterval(() => {\n      this.save();\n      this.toastr.info('Game saved.', null, {\n        closeButton: false,\n      });\n    }, saveInterval);    \n  }\n\n  // Returns the head of our generator list. This is the\n  // generator that actually produces energy.\n  head(): Generator {\n    return this.state.generators[0];\n  }\n\n  // Return all generators (in order) except the main\n  // generator (which is returned by `head`). All generators\n  // except the main generator produce other generators\n  // one tier below them.\n  tail(): Generator[] {\n    return this.state.generators.slice(1);\n  }  \n\n  save(): void {\n    localStorage.setItem(SAVE_FILE, JSON.stringify(this.state));\n  }\n\n  load(): void {\n    let json = localStorage.getItem(SAVE_FILE);\n\n    // Make sure we actually have a save file, otherwise just\n    // return early and do nothing.\n    if(!json) {\n      return;\n    }\n\n    // The rest of this code just copies the values from our\n    // save file into the actual state. This code is quite\n    // error prone and may lead to really weird stuff if you\n    // forget anything.\n    let save = JSON.parse(json);     \n    this.state.energy = new Decimal(save.energy);\n    this.state.lastUpdate = save.lastUpdate;\n    this.state.level = save.level;\n\n    for (let i = 0; i < this.state.generators.length; i++) {\n      this.state.generators[i].baseProduction = new Decimal(save.generators[i].baseProduction);\n      this.state.generators[i].number = new Decimal(save.generators[i].number);\n      this.state.generators[i].numberBought = save.generators[i].numberBought;\n      this.state.generators[i].level = save.generators[i].level;\n    }\n  }\n\n  update(dt: number) {\n    // The value of `dt` should be around 1000 / rate. \n    // With `rate` of 10 this boils down to 100 millisecods.\n    // It might be a bit shorter or longer depending on browser timing.\n\n    // First we need to find out if we under- or overshot our\n    // intended interval. We expect this method to be called\n    // every `interval` of time (which is a number in milliseconds)\n    // so we need to see how much of the interval we have (especially\n    // when we are lagging).\n\n    // If we are running exactly on schedule then `r` should be 1.0.\n    // If we are lagging then `r` will be greater than 1.0.\n    // If we are running too fast (usually only happens due to tiny\n    // browser scheduling variations) then `r` will be less than 1.0.\n    let r = dt / interval;\n\n    // However, if `r` is less than 1.0 we'll clamp it to 1 so we dont\n    // get weird number behavior going between growth and decline.\n    // If we didn't do this your energy gain of 3.2 might suddenly become\n    // 3.17 on the next frame and that is really annoying.\n    r = r < 1.0 ? 1.0 : r;\n\n    // Now we just need to compensate this with either a higher\n    // or lower tickspeed. The `tickspeed` value starts of at 1000\n    // but can be dynamically adjusted by whatever the game requires. \n    // The `refspeed` value never changes but it should be equal \n    // to the `tickspeed` at the beginning of the game.\n\n    // First we convert our scaled unit value `r` into \"speed\" domain.\n    // If we are running exactly on time then `r` should be very close\n    // to 1.0 and to normalize it we want it to be around a `refspeed` \n    // instead.\n    let s = r * refspeed;\n\n    // Now we scale `s` with our actual tickspeed. If the tickspeed\n    // is lower than a 1000 then time should be progressing faster\n    // scorewise (even though we're still ticking along the same `interval`).\n    // If tickspeed is 1000 and we are running on time then this should\n    // return back into a scale unit of around 1.0.\n    s = s / tickspeed;\n\n    // Now we can finally scale our production with time and tickspeed.\n    // The way we need to deal with generators depends on whether it \n    // produces energy or other generators. All generators except the first\n    // one (`head`) produce generators one tier below them. The `head`\n    // generators produce the actual energy.\n    let first = this.head();\n\n    // The value of `grossEnergy` is what we would've produced if the\n    // game was running perfectly on time.\n    let grossEnergy = first.number.mul(first.production());\n\n    // The value of `nettEnergy` is compensated for the slight variations\n    // of actual frame duration (`dt`).\n    let nettEnergy = grossEnergy.mul(s);\n    this.state.energy = this.state.energy.add(nettEnergy);\n\n    // We'll use `grossEnergy` to display current output because it's a\n    // much more stable number than `nettEnergy`. So even though we're\n    // technically lying to the user this leads to a much more pleasant\n    // experience.\n    this.state.output = grossEnergy.mul(rate).floor();\n\n    // The rest of the generators can all be handled by just looping\n    // through them and adding their production to the number of \n    // generators one tier below (i.e. a hyper booster produces boosters\n    // and a booster produces generators).\n    let rest = this.tail();\n    for (let g of rest) {\n      let x = g.number.mul(g.production()).mul(s);\n      let downstream = this.state.generators[g.tier - 1];\n      downstream.number = downstream.number.add(x);\n    }\n  }  \n}\n","<style>\n  .nav-pills .nav-link.active, .nav-pills .show>.nav-link {\n    color: white;\n  }\n</style>\n<div class=\"container\">\n  <app-score></app-score>\n  <nav>\n    <div class=\"nav nav-pills mb-2\" id=\"nav-tab\" role=\"tablist\">\n      <a class=\"nav-item nav-link active\" id=\"nav-generators-tab\" data-toggle=\"tab\" href=\"#nav-generators\" role=\"tab\"\n        aria-controls=\"nav-generators\" aria-selected=\"true\">Generators</a>\n      <a class=\"nav-item nav-link\" id=\"nav-achievements-tab\" data-toggle=\"tab\" href=\"#nav-achievements\" role=\"tab\"\n        aria-controls=\"nav-achievements\" aria-selected=\"false\">Achievements</a>\n      <a class=\"nav-item nav-link\" id=\"nav-options-tab\" data-toggle=\"tab\" href=\"#nav-options\" role=\"tab\"\n        aria-controls=\"nav-options\" aria-selected=\"false\">Options</a>\n    </div>\n  </nav>\n  <div class=\"tab-content\" id=\"nav-tabContent\">\n    <div class=\"tab-pane fade show active\" id=\"nav-generators\" role=\"tabpanel\" aria-labelledby=\"nav-generators-tab\">\n      <app-generators></app-generators>\n    </div>\n    <div class=\"tab-pane fade\" id=\"nav-achievements\" role=\"tabpanel\" aria-labelledby=\"nav-achievements-tab\">\n      <app-achievements></app-achievements>\n    </div>\n    <div class=\"tab-pane fade\" id=\"nav-options\" role=\"tabpanel\" aria-labelledby=\"nav-options-tab\">\n      <app-options></app-options>\n    </div>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { GeneratorsComponent } from './generators/generators.component';\nimport { OptionsComponent } from './options/options.component';\nimport { ScoreComponent } from './score/score.component';\nimport { AchievementsComponent } from './achievements/achievements.component';\n\nimport { FormatCostPipe } from './format-cost.pipe';\nimport { FormatNumberPipe } from './format-number.pipe';\nimport { FormatProductionPipe } from './format-production.pipe';\nimport { FormatScorePipe } from './format-score.pipe';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GeneratorsComponent,\n    OptionsComponent,\n    ScoreComponent,\n    AchievementsComponent,\n    FormatCostPipe,\n    FormatNumberPipe,\n    FormatProductionPipe,\n    FormatScorePipe\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { State } from '../state';\nimport { StateService } from '../state.service';\nimport { Generator } from '../generator';\n\n@Component({\n  selector: 'app-generators',\n  templateUrl: './generators.component.html',\n  styleUrls: ['./generators.component.css']\n})\nexport class GeneratorsComponent implements OnInit {\n  state: State;\n\n  constructor(private stateService: StateService) { }\n\n  ngOnInit(): void {\n    this.state = this.stateService.getState();\n  }\n\n  generators(): Generator[] {\n    let state = this.state;\n    return this.state.generators.filter(function (x) {\n      return x.isVisible(state);\n    });\n  }\n\n  max(): void {\n    for (let g of this.generators()) {\n      if (this.state.energy.greaterThanOrEqualTo(g.costTo10())) {\n        g.buyTo10(this.state);\n      }\n    }\n  }\n\n  isMaxEnabled(): boolean {\n    let state = this.state;\n    let gens = this.generators();\n    return gens.some(function (x) {\n      return x.isBuyTo10Enabled(state);\n    });\n  }  \n}\n","<div class=\"row align-items-center\" *ngFor=\"let g of generators()\">\n  <div class=\"col-sm pt-1\" style=\"font-family: 'Secular One', sans-serif; font-size: 1.1em\">\n    {{g.name}} ({{g.level}})\n  </div>\n  <div class=\"col-sm pt-1 text-right\">\n    {{g.number | formatNumber}}\n  </div>\n  <div class=\"col-sm pt-1 text-right\">\n    x{{g.production() | formatProduction}}\n  </div>\n  <div class=\"col-sm pt-1\">\n    <button type=\"button\" \n      [disabled]=\"!g.isBuyEnabled(state)\" \n      class=\"btn btn-secondary btn-block\"\n      (click)=\"g.buy(state)\">\n      <span class=\"badge badge-light\">{{g.purchased()}}</span>\n      {{g.cost() | formatCost }}\n    </button>\n  </div>\n  <div class=\"col-sm pt-1\">\n    <button type=\"button\" \n      [disabled]=\"!g.isBuyTo10Enabled(state)\" \n      class=\"btn btn-primary btn-block\"\n      (click)=\"g.buyTo10(state)\">\n      {{g.costTo10() | formatCost }}\n    </button>\n  </div>\n</div>\n<div class=\"row mb-4\">\n  <div class=\"col-sm pt-1\"></div>\n  <div class=\"col-sm pt-1\"></div>\n  <div class=\"col-sm pt-1\"></div>\n  <div class=\"col-sm pt-1\"></div>\n  <div class=\"col-sm pt-1\">\n    <button \n      type=\"button\" \n      [disabled]=\"!isMaxEnabled()\" \n      class=\"btn btn-primary btn-block\"\n      (click)=\"max()\">\n      Max\n    </button>\n  </div>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport Decimal from 'break_infinity.js';\r\nimport { hasKnownSuffix, formatBignumber, shorten } from './formatting';\r\n\r\n@Pipe({ name: 'formatProduction'})\r\nexport class FormatProductionPipe implements PipeTransform {\r\n  transform(value: Decimal) {\r\n    if (value.lessThan(1e4)) {\r\n      return value.toFixed(1);\r\n    }\r\n  \r\n    if (!hasKnownSuffix(value)) {\r\n      return formatBignumber(value);\r\n    }\r\n  \r\n    let [val, _, suffix] = shorten(value);\r\n    return `${val.toFixed(1)} ${suffix}`;\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\n\nconst ACHIEVEMENTS = [];\n\n@Component({\n  selector: 'app-achievements',\n  templateUrl: './achievements.component.html',\n  styleUrls: ['./achievements.component.css']\n})\nexport class AchievementsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Coming soon!</p>\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport Decimal from 'break_infinity.js';\r\nimport { hasKnownSuffix, formatBignumber, shorten } from './formatting';\r\n\r\n@Pipe({ name: 'formatNumber'})\r\nexport class FormatNumberPipe implements PipeTransform {\r\n  transform(value: Decimal) {\r\n    if (value.lessThan(1e4)) {\r\n      return value.toFixed(0);\r\n    }\r\n  \r\n    if (!hasKnownSuffix(value)) {\r\n      return formatBignumber(value);\r\n    }\r\n  \r\n    let [val, _, suffix] = shorten(value);\r\n    return `${val.toFixed(1)} ${suffix}`;\r\n  }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>chances are nil</title>
    <link>https://basp.github.io/</link>
    <description>Recent content on chances are nil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Oct 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://basp.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>big integers</title>
      <link>https://basp.github.io/posts/2018-10-23-big-integers/</link>
      <pubDate>Tue, 23 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://basp.github.io/posts/2018-10-23-big-integers/</guid>
      <description>This (series) of posts describes the basics of implementing a big integer from scratch. The implementation will be optimized for readability first so don&amp;rsquo;t expect great performance. I&amp;rsquo;ll be using C# to implement this BigInt but it should be fairly trivial to port. There will be some math involved so lets all hope I get it correct.
the base of a number Before we even start modelling our BigInt properly we need to answer two questions:</description>
    </item>
    
    <item>
      <title>random thoughts</title>
      <link>https://basp.github.io/posts/2018-09-13-random-thoughts/</link>
      <pubDate>Thu, 13 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://basp.github.io/posts/2018-09-13-random-thoughts/</guid>
      <description>This is just a stream of random statements. If you agree, great! If you disagree that&amp;rsquo;s cool too.
 C is our lingua franca To do C right you will have to know assembly Not many people know assembly C is a somewhat leaky abstraction C++ is just a bad superset of C Some people write C++ code (when they should be just writing C) Dynamic programming languages are super awesome Until they are not Static types are a nuisance Until they offer you guidance Live code updates are awesome (shout out to Erlang) Functional languages are cool (Haskell, OCaml, F# and Erland I&amp;rsquo;m looking at you) Dynamically strong typed functional languages are even cooler (more love for Erlang) But you&amp;rsquo;ll end up adding type specifications anyway) :&#39;( It&amp;rsquo;s reasonable to expect more static constructs as projects grow That&amp;rsquo;s why things like TypeScript and gradual typing are exciting Haskell is the future \o/ But sadly nobody understands monads and functors and why they are great :( And those who do seem to be unable to explain it to mere mortals -_- Expressions are to be preferred above statements almost all the time Unless you absolutely need a statement It&amp;rsquo;s a bit of a pain to change state in some languages for good reasons An expression should not change state A statement should not return a value Sequences (think lazy lists or enumerables/iterables) are good Think twice or even thrice about every if statement you write That accounts for switch statements as well Logic should ideally flow in one straight line via expressions and then via the stack back to the caller (branching statements break this logic and should be comparable to the evil of GOTO statements) If you write everything terms of map and filter you won&amp;rsquo;t need much statements The sun is bright don&amp;rsquo;t directly look into it  </description>
    </item>
    
    <item>
      <title>renovation</title>
      <link>https://basp.github.io/posts/2018-04-05-notice/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://basp.github.io/posts/2018-04-05-notice/</guid>
      <description>I&amp;rsquo;m cleaning up the mess of posts that I made, editing them to be better, more coherenent and finished. Most of the content should be back soon but hopefully in much better shape.
&amp;lt;section id=&amp;#34;main&amp;#34;&amp;gt;&amp;lt;div&amp;gt;&amp;lt;h1 id=&amp;#34;title&amp;#34;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;{{ range .Pages }}{{ .Render &amp;#34;summary&amp;#34;}}{{ end }}&amp;lt;/div&amp;gt;&amp;lt;/section&amp;gt; </description>
    </item>
    
    <item>
      <title></title>
      <link>https://basp.github.io/posts/2020-03-31-covid-19/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://basp.github.io/posts/2020-03-31-covid-19/</guid>
      <description>Covid 19 Report Initial report First of May 2020. Social distancing is the norm. It wasn&amp;rsquo;t even a thing a few weeks ago but now it&amp;rsquo;s suddenly the norm. Just a few weeks ago the government was saying it would be fine. We&amp;rsquo;d handle this they said. Heck, they&amp;rsquo;d even let people gather and travel freely so they could have their sinful pleasures. Yeah it was bad in China but that was just China right?</description>
    </item>
    
    <item>
      <title>lina</title>
      <link>https://basp.github.io/projects/lina/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://basp.github.io/projects/lina/</guid>
      <description></description>
    </item>
    
    <item>
      <title>nanibot</title>
      <link>https://basp.github.io/projects/nanibot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://basp.github.io/projects/nanibot/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pixlr</title>
      <link>https://basp.github.io/projects/pixlr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://basp.github.io/projects/pixlr/</guid>
      <description></description>
    </item>
    
    <item>
      <title>raina</title>
      <link>https://basp.github.io/projects/raina/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://basp.github.io/projects/raina/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
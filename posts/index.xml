<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on chances are nil</title>
    <link>https://basp.github.io/posts/</link>
    <description>Recent content in Posts on chances are nil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 20 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://basp.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>floating point arithmetic</title>
      <link>https://basp.github.io/posts/2018-03-20-floating-point-p1/</link>
      <pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://basp.github.io/posts/2018-03-20-floating-point-p1/</guid>
      <description>In this series of posts we&amp;rsquo;ll take a look at how floating-point arithmetic works under the hood and how to implement the IEEE standard for floating-point arithmetic. It&amp;rsquo;s a long (and probably winding) series of posts that will (hopefully) end in us implementing a floating-point type with arbitrary precision. Expect heavy editing while I&amp;rsquo;m publishing this as a work in progress.
the basics A floating point number is represented by three components:</description>
    </item>
    
  </channel>
</rss>
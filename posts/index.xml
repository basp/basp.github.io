<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on chances are nil</title>
    <link>https://basp.github.io/posts/</link>
    <description>Recent content in Posts on chances are nil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://basp.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>fun with bitmaps</title>
      <link>https://basp.github.io/posts/fun-with-bitmaps/</link>
      <pubDate>Fri, 12 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://basp.github.io/posts/fun-with-bitmaps/</guid>
      <description>Weekend is here so let&amp;rsquo;s have some fun with bitmaps. Before we can start though, we need to grab a bitmap or two to work with. Make sure to get one or two good sized ones (around 1000x1000 will do) and make sure to put them in an easy path.
Oh, and of course I&amp;rsquo;m doing this from LINQPad so that&amp;rsquo;s where the Dump method comes from. If you don&amp;rsquo;t have LINQPad you can still follow along but you will have to do some extra work to actually view the results.</description>
    </item>
    
    <item>
      <title>curve fitting with linqpad</title>
      <link>https://basp.github.io/posts/curve-fitting-with-linqpad/</link>
      <pubDate>Wed, 10 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://basp.github.io/posts/curve-fitting-with-linqpad/</guid>
      <description>Is LINQPad a replacement for the likes of R, IPython and MATLAB?
Probably not.
Yet, thanks to some nifty libraries, it can come pretty close nowadays.
summary We&amp;rsquo;re going to look at doing some curve fitting for programmers using Math.NET Numerics to do the heavy lifting and OxyPlot for WPF to render our results. We&amp;rsquo;ll be doing this from LINQPad so we can evaluate our results interactively (although you could follow along in any other .</description>
    </item>
    
    <item>
      <title>procedures and functions</title>
      <link>https://basp.github.io/posts/procedures-and-functions/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://basp.github.io/posts/procedures-and-functions/</guid>
      <description>In the Pascal programming language, there&amp;rsquo;s a clear distinction between callable code that returns a result and callable code that returns nothing. They are called function and procedure respectively. Most programming languages don&amp;rsquo;t really bother to make such a distinction though. Often, procedures are indicated by using a special-purpose none (or null) type. In the C-family of programming languages, this type is called void and in functional programming languages they often call it the unit type.</description>
    </item>
    
  </channel>
</rss>